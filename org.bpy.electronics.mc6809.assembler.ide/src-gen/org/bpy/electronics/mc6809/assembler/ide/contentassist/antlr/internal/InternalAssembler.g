/*
 * generated by Xtext 2.29.0
 */
grammar InternalAssembler;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.bpy.electronics.mc6809.assembler.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.bpy.electronics.mc6809.assembler.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.bpy.electronics.mc6809.assembler.services.AssemblerGrammarAccess;

}
@parser::members {
	private AssemblerGrammarAccess grammarAccess;

	public void setGrammarAccess(AssemblerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getSourceLinesAssignment()); }
		(rule__Model__SourceLinesAssignment)*
		{ after(grammarAccess.getModelAccess().getSourceLinesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceLine
entryRuleSourceLine
:
{ before(grammarAccess.getSourceLineRule()); }
	 ruleSourceLine
{ after(grammarAccess.getSourceLineRule()); } 
	 EOF 
;

// Rule SourceLine
ruleSourceLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceLineAccess().getAlternatives()); }
		(rule__SourceLine__Alternatives)
		{ after(grammarAccess.getSourceLineAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlankLine
entryRuleBlankLine
:
{ before(grammarAccess.getBlankLineRule()); }
	 ruleBlankLine
{ after(grammarAccess.getBlankLineRule()); } 
	 EOF 
;

// Rule BlankLine
ruleBlankLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlankLineAccess().getGroup()); }
		(rule__BlankLine__Group__0)
		{ after(grammarAccess.getBlankLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommentLine
entryRuleCommentLine
:
{ before(grammarAccess.getCommentLineRule()); }
	 ruleCommentLine
{ after(grammarAccess.getCommentLineRule()); } 
	 EOF 
;

// Rule CommentLine
ruleCommentLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentLineAccess().getGroup()); }
		(rule__CommentLine__Group__0)
		{ after(grammarAccess.getCommentLineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectiveLine
entryRuleDirectiveLine
:
{ before(grammarAccess.getDirectiveLineRule()); }
	 ruleDirectiveLine
{ after(grammarAccess.getDirectiveLineRule()); } 
	 EOF 
;

// Rule DirectiveLine
ruleDirectiveLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getAlternatives()); }
		(rule__DirectiveLine__Alternatives)
		{ after(grammarAccess.getDirectiveLineAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFccDirective
entryRuleFccDirective
:
{ before(grammarAccess.getFccDirectiveRule()); }
	 ruleFccDirective
{ after(grammarAccess.getFccDirectiveRule()); } 
	 EOF 
;

// Rule FccDirective
ruleFccDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFccDirectiveAccess().getGroup()); }
		(rule__FccDirective__Group__0)
		{ after(grammarAccess.getFccDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRegDirective
entryRuleRegDirective
:
{ before(grammarAccess.getRegDirectiveRule()); }
	 ruleRegDirective
{ after(grammarAccess.getRegDirectiveRule()); } 
	 EOF 
;

// Rule RegDirective
ruleRegDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getGroup()); }
		(rule__RegDirective__Group__0)
		{ after(grammarAccess.getRegDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSpcDirective
entryRuleSpcDirective
:
{ before(grammarAccess.getSpcDirectiveRule()); }
	 ruleSpcDirective
{ after(grammarAccess.getSpcDirectiveRule()); } 
	 EOF 
;

// Rule SpcDirective
ruleSpcDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getGroup()); }
		(rule__SpcDirective__Group__0)
		{ after(grammarAccess.getSpcDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamDirective
entryRuleNamDirective
:
{ before(grammarAccess.getNamDirectiveRule()); }
	 ruleNamDirective
{ after(grammarAccess.getNamDirectiveRule()); } 
	 EOF 
;

// Rule NamDirective
ruleNamDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getGroup()); }
		(rule__NamDirective__Group__0)
		{ after(grammarAccess.getNamDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePagDirective
entryRulePagDirective
:
{ before(grammarAccess.getPagDirectiveRule()); }
	 rulePagDirective
{ after(grammarAccess.getPagDirectiveRule()); } 
	 EOF 
;

// Rule PagDirective
rulePagDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPagDirectiveAccess().getGroup()); }
		(rule__PagDirective__Group__0)
		{ after(grammarAccess.getPagDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOptDirective
entryRuleOptDirective
:
{ before(grammarAccess.getOptDirectiveRule()); }
	 ruleOptDirective
{ after(grammarAccess.getOptDirectiveRule()); } 
	 EOF 
;

// Rule OptDirective
ruleOptDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getGroup()); }
		(rule__OptDirective__Group__0)
		{ after(grammarAccess.getOptDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailDirective
entryRuleFailDirective
:
{ before(grammarAccess.getFailDirectiveRule()); }
	 ruleFailDirective
{ after(grammarAccess.getFailDirectiveRule()); } 
	 EOF 
;

// Rule FailDirective
ruleFailDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailDirectiveAccess().getGroup()); }
		(rule__FailDirective__Group__0)
		{ after(grammarAccess.getFailDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetDirective
entryRuleSetDirective
:
{ before(grammarAccess.getSetDirectiveRule()); }
	 ruleSetDirective
{ after(grammarAccess.getSetDirectiveRule()); } 
	 EOF 
;

// Rule SetDirective
ruleSetDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getGroup()); }
		(rule__SetDirective__Group__0)
		{ after(grammarAccess.getSetDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFillDirective
entryRuleFillDirective
:
{ before(grammarAccess.getFillDirectiveRule()); }
	 ruleFillDirective
{ after(grammarAccess.getFillDirectiveRule()); } 
	 EOF 
;

// Rule FillDirective
ruleFillDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getGroup()); }
		(rule__FillDirective__Group__0)
		{ after(grammarAccess.getFillDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBszDirective
entryRuleBszDirective
:
{ before(grammarAccess.getBszDirectiveRule()); }
	 ruleBszDirective
{ after(grammarAccess.getBszDirectiveRule()); } 
	 EOF 
;

// Rule BszDirective
ruleBszDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getGroup()); }
		(rule__BszDirective__Group__0)
		{ after(grammarAccess.getBszDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFdbDirective
entryRuleFdbDirective
:
{ before(grammarAccess.getFdbDirectiveRule()); }
	 ruleFdbDirective
{ after(grammarAccess.getFdbDirectiveRule()); } 
	 EOF 
;

// Rule FdbDirective
ruleFdbDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFdbDirectiveAccess().getGroup()); }
		(rule__FdbDirective__Group__0)
		{ after(grammarAccess.getFdbDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFcbDirective
entryRuleFcbDirective
:
{ before(grammarAccess.getFcbDirectiveRule()); }
	 ruleFcbDirective
{ after(grammarAccess.getFcbDirectiveRule()); } 
	 EOF 
;

// Rule FcbDirective
ruleFcbDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFcbDirectiveAccess().getGroup()); }
		(rule__FcbDirective__Group__0)
		{ after(grammarAccess.getFcbDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRmbDirective
entryRuleRmbDirective
:
{ before(grammarAccess.getRmbDirectiveRule()); }
	 ruleRmbDirective
{ after(grammarAccess.getRmbDirectiveRule()); } 
	 EOF 
;

// Rule RmbDirective
ruleRmbDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getGroup()); }
		(rule__RmbDirective__Group__0)
		{ after(grammarAccess.getRmbDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndDirective
entryRuleEndDirective
:
{ before(grammarAccess.getEndDirectiveRule()); }
	 ruleEndDirective
{ after(grammarAccess.getEndDirectiveRule()); } 
	 EOF 
;

// Rule EndDirective
ruleEndDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getGroup()); }
		(rule__EndDirective__Group__0)
		{ after(grammarAccess.getEndDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrgDirective
entryRuleOrgDirective
:
{ before(grammarAccess.getOrgDirectiveRule()); }
	 ruleOrgDirective
{ after(grammarAccess.getOrgDirectiveRule()); } 
	 EOF 
;

// Rule OrgDirective
ruleOrgDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getGroup()); }
		(rule__OrgDirective__Group__0)
		{ after(grammarAccess.getOrgDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquDirective
entryRuleEquDirective
:
{ before(grammarAccess.getEquDirectiveRule()); }
	 ruleEquDirective
{ after(grammarAccess.getEquDirectiveRule()); } 
	 EOF 
;

// Rule EquDirective
ruleEquDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getGroup()); }
		(rule__EquDirective__Group__0)
		{ after(grammarAccess.getEquDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListOfExpression
entryRuleListOfExpression
:
{ before(grammarAccess.getListOfExpressionRule()); }
	 ruleListOfExpression
{ after(grammarAccess.getListOfExpressionRule()); } 
	 EOF 
;

// Rule ListOfExpression
ruleListOfExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListOfExpressionAccess().getGroup()); }
		(rule__ListOfExpression__Group__0)
		{ after(grammarAccess.getListOfExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getOperandAssignment()); }
		(rule__Expression__OperandAssignment)
		{ after(grammarAccess.getExpressionAccess().getOperandAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivision
entryRuleDivision
:
{ before(grammarAccess.getDivisionRule()); }
	 ruleDivision
{ after(grammarAccess.getDivisionRule()); } 
	 EOF 
;

// Rule Division
ruleDivision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivisionAccess().getGroup()); }
		(rule__Division__Group__0)
		{ after(grammarAccess.getDivisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModulo
entryRuleModulo
:
{ before(grammarAccess.getModuloRule()); }
	 ruleModulo
{ after(grammarAccess.getModuloRule()); } 
	 EOF 
;

// Rule Modulo
ruleModulo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuloAccess().getGroup()); }
		(rule__Modulo__Group__0)
		{ after(grammarAccess.getModuloAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubstraction
entryRuleSubstraction
:
{ before(grammarAccess.getSubstractionRule()); }
	 ruleSubstraction
{ after(grammarAccess.getSubstractionRule()); } 
	 EOF 
;

// Rule Substraction
ruleSubstraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubstractionAccess().getGroup()); }
		(rule__Substraction__Group__0)
		{ after(grammarAccess.getSubstractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftShift
entryRuleLeftShift
:
{ before(grammarAccess.getLeftShiftRule()); }
	 ruleLeftShift
{ after(grammarAccess.getLeftShiftRule()); } 
	 EOF 
;

// Rule LeftShift
ruleLeftShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftShiftAccess().getGroup()); }
		(rule__LeftShift__Group__0)
		{ after(grammarAccess.getLeftShiftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRightShift
entryRuleRightShift
:
{ before(grammarAccess.getRightShiftRule()); }
	 ruleRightShift
{ after(grammarAccess.getRightShiftRule()); } 
	 EOF 
;

// Rule RightShift
ruleRightShift 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRightShiftAccess().getGroup()); }
		(rule__RightShift__Group__0)
		{ after(grammarAccess.getRightShiftAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXor
entryRuleXor
:
{ before(grammarAccess.getXorRule()); }
	 ruleXor
{ after(grammarAccess.getXorRule()); } 
	 EOF 
;

// Rule Xor
ruleXor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorAccess().getGroup()); }
		(rule__Xor__Group__0)
		{ after(grammarAccess.getXorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifierValue
entryRuleIdentifierValue
:
{ before(grammarAccess.getIdentifierValueRule()); }
	 ruleIdentifierValue
{ after(grammarAccess.getIdentifierValueRule()); } 
	 EOF 
;

// Rule IdentifierValue
ruleIdentifierValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierValueAccess().getValueAssignment()); }
		(rule__IdentifierValue__ValueAssignment)
		{ after(grammarAccess.getIdentifierValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDecimalValue
entryRuleDecimalValue
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDecimalValueAccess().getGroup()); }
		(rule__DecimalValue__Group__0)
		{ after(grammarAccess.getDecimalValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHexaDecimalValue
entryRuleHexaDecimalValue
:
{ before(grammarAccess.getHexaDecimalValueRule()); }
	 ruleHexaDecimalValue
{ after(grammarAccess.getHexaDecimalValueRule()); } 
	 EOF 
;

// Rule HexaDecimalValue
ruleHexaDecimalValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHexaDecimalValueAccess().getValueAssignment()); }
		(rule__HexaDecimalValue__ValueAssignment)
		{ after(grammarAccess.getHexaDecimalValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOctalValue
entryRuleOctalValue
:
{ before(grammarAccess.getOctalValueRule()); }
	 ruleOctalValue
{ after(grammarAccess.getOctalValueRule()); } 
	 EOF 
;

// Rule OctalValue
ruleOctalValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOctalValueAccess().getValueAssignment()); }
		(rule__OctalValue__ValueAssignment)
		{ after(grammarAccess.getOctalValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryValue
entryRuleBinaryValue
:
{ before(grammarAccess.getBinaryValueRule()); }
	 ruleBinaryValue
{ after(grammarAccess.getBinaryValueRule()); } 
	 EOF 
;

// Rule BinaryValue
ruleBinaryValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryValueAccess().getValueAssignment()); }
		(rule__BinaryValue__ValueAssignment)
		{ after(grammarAccess.getBinaryValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharacterValue
entryRuleCharacterValue
:
{ before(grammarAccess.getCharacterValueRule()); }
	 ruleCharacterValue
{ after(grammarAccess.getCharacterValueRule()); } 
	 EOF 
;

// Rule CharacterValue
ruleCharacterValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharacterValueAccess().getValueAssignment()); }
		(rule__CharacterValue__ValueAssignment)
		{ after(grammarAccess.getCharacterValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndOfLine
entryRuleEndOfLine
:
{ before(grammarAccess.getEndOfLineRule()); }
	 ruleEndOfLine
{ after(grammarAccess.getEndOfLineRule()); } 
	 EOF 
;

// Rule EndOfLine
ruleEndOfLine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndOfLineAccess().getAlternatives()); }
		(rule__EndOfLine__Alternatives)
		{ after(grammarAccess.getEndOfLineAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssemblyOption
ruleAssemblyOption
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getAlternatives()); }
		(rule__AssemblyOption__Alternatives)
		{ after(grammarAccess.getAssemblyOptionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Register
ruleRegister
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getAlternatives()); }
		(rule__Register__Alternatives)
		{ after(grammarAccess.getRegisterAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceLine__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentAssignment_0()); }
		(rule__SourceLine__LineContentAssignment_0)
		{ after(grammarAccess.getSourceLineAccess().getLineContentAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentAssignment_1()); }
		(rule__SourceLine__LineContentAssignment_1)
		{ after(grammarAccess.getSourceLineAccess().getLineContentAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentAssignment_2()); }
		(rule__SourceLine__LineContentAssignment_2)
		{ after(grammarAccess.getSourceLineAccess().getLineContentAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_0()); }
		(rule__DirectiveLine__DirectiveAssignment_0)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_1()); }
		(rule__DirectiveLine__DirectiveAssignment_1)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_2()); }
		(rule__DirectiveLine__DirectiveAssignment_2)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_3()); }
		(rule__DirectiveLine__DirectiveAssignment_3)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_4()); }
		(rule__DirectiveLine__DirectiveAssignment_4)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_5()); }
		(rule__DirectiveLine__DirectiveAssignment_5)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_6()); }
		(rule__DirectiveLine__DirectiveAssignment_6)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_7()); }
		(rule__DirectiveLine__DirectiveAssignment_7)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_7()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_8()); }
		(rule__DirectiveLine__DirectiveAssignment_8)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_8()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_9()); }
		(rule__DirectiveLine__DirectiveAssignment_9)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_9()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_10()); }
		(rule__DirectiveLine__DirectiveAssignment_10)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_10()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_11()); }
		(rule__DirectiveLine__DirectiveAssignment_11)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_11()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_12()); }
		(rule__DirectiveLine__DirectiveAssignment_12)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_12()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_13()); }
		(rule__DirectiveLine__DirectiveAssignment_13)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_13()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_14()); }
		(rule__DirectiveLine__DirectiveAssignment_14)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_14()); }
	)
	|
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_15()); }
		(rule__DirectiveLine__DirectiveAssignment_15)
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveAssignment_15()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getDirectiveAssignment_2_0()); }
		(rule__NamDirective__DirectiveAssignment_2_0)
		{ after(grammarAccess.getNamDirectiveAccess().getDirectiveAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamDirectiveAccess().getDirectiveAssignment_2_1()); }
		(rule__NamDirective__DirectiveAssignment_2_1)
		{ after(grammarAccess.getNamDirectiveAccess().getDirectiveAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getGroup_4_0()); }
		(rule__SetDirective__Group_4_0__0)
		{ after(grammarAccess.getSetDirectiveAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAssignment_4_1()); }
		(rule__SetDirective__IsRelativeToPCAssignment_4_1)
		{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__DirectiveAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getDirectiveBSZKeyword_2_0_0()); }
		'BSZ'
		{ after(grammarAccess.getBszDirectiveAccess().getDirectiveBSZKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBszDirectiveAccess().getDirectiveZMBKeyword_2_0_1()); }
		'ZMB'
		{ after(grammarAccess.getBszDirectiveAccess().getDirectiveZMBKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getGroup_3_1_0()); }
		(rule__EndDirective__Group_3_1_0__0)
		{ after(grammarAccess.getEndDirectiveAccess().getGroup_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAssignment_3_1_1()); }
		(rule__EndDirective__IsRelativeToPCAssignment_3_1_1)
		{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAssignment_3_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getGroup_3_1_0()); }
		(rule__OrgDirective__Group_3_1_0__0)
		{ after(grammarAccess.getOrgDirectiveAccess().getGroup_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAssignment_3_1_1()); }
		(rule__OrgDirective__IsRelativeToPCAssignment_3_1_1)
		{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAssignment_3_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getGroup_4_0()); }
		(rule__EquDirective__Group_4_0__0)
		{ after(grammarAccess.getEquDirectiveAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAssignment_4_1()); }
		(rule__EquDirective__IsRelativeToPCAssignment_4_1)
		{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_0()); }
		(rule__Primary__ValueAssignment_0)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_1()); }
		(rule__Primary__ValueAssignment_1)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_2()); }
		(rule__Primary__ValueAssignment_2)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_3()); }
		(rule__Primary__ValueAssignment_3)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_4()); }
		(rule__Primary__ValueAssignment_4)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getValueAssignment_5()); }
		(rule__Primary__ValueAssignment_5)
		{ after(grammarAccess.getPrimaryAccess().getValueAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_6()); }
		(rule__Primary__Group_6__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_7()); }
		(rule__Primary__Group_7__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__SignAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueAccess().getSignHyphenMinusKeyword_0_0_0()); }
		'-'
		{ after(grammarAccess.getDecimalValueAccess().getSignHyphenMinusKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDecimalValueAccess().getSignPlusSignKeyword_0_0_1()); }
		'+'
		{ after(grammarAccess.getDecimalValueAccess().getSignPlusSignKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndOfLine__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndOfLineAccess().getCRTerminalRuleCall_0()); }
		RULE_CR
		{ after(grammarAccess.getEndOfLineAccess().getCRTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEndOfLineAccess().getEND_OF_FILETerminalRuleCall_1()); }
		RULE_END_OF_FILE
		{ after(grammarAccess.getEndOfLineAccess().getEND_OF_FILETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssemblyOption__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getPAGEnumLiteralDeclaration_0()); }
		('PAG')
		{ after(grammarAccess.getAssemblyOptionAccess().getPAGEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getNOPEnumLiteralDeclaration_1()); }
		('NOP')
		{ after(grammarAccess.getAssemblyOptionAccess().getNOPEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getCONEnumLiteralDeclaration_2()); }
		('CON')
		{ after(grammarAccess.getAssemblyOptionAccess().getCONEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getNOCEnumLiteralDeclaration_3()); }
		('NOC')
		{ after(grammarAccess.getAssemblyOptionAccess().getNOCEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getMACEnumLiteralDeclaration_4()); }
		('MAC')
		{ after(grammarAccess.getAssemblyOptionAccess().getMACEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getNOMEnumLiteralDeclaration_5()); }
		('NOM')
		{ after(grammarAccess.getAssemblyOptionAccess().getNOMEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getEXPEnumLiteralDeclaration_6()); }
		('EXP')
		{ after(grammarAccess.getAssemblyOptionAccess().getEXPEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssemblyOptionAccess().getNOEEnumLiteralDeclaration_7()); }
		('NOE')
		{ after(grammarAccess.getAssemblyOptionAccess().getNOEEnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Register__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegisterAccess().getAEnumLiteralDeclaration_0()); }
		('A')
		{ after(grammarAccess.getRegisterAccess().getAEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getBEnumLiteralDeclaration_1()); }
		('B')
		{ after(grammarAccess.getRegisterAccess().getBEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getDEnumLiteralDeclaration_2()); }
		('D')
		{ after(grammarAccess.getRegisterAccess().getDEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getXEnumLiteralDeclaration_3()); }
		('X')
		{ after(grammarAccess.getRegisterAccess().getXEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getYEnumLiteralDeclaration_4()); }
		('Y')
		{ after(grammarAccess.getRegisterAccess().getYEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getUEnumLiteralDeclaration_5()); }
		('U')
		{ after(grammarAccess.getRegisterAccess().getUEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getSEnumLiteralDeclaration_6()); }
		('S')
		{ after(grammarAccess.getRegisterAccess().getSEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getDPEnumLiteralDeclaration_7()); }
		('DP')
		{ after(grammarAccess.getRegisterAccess().getDPEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getCCEnumLiteralDeclaration_8()); }
		('CC')
		{ after(grammarAccess.getRegisterAccess().getCCEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getRegisterAccess().getPCEnumLiteralDeclaration_9()); }
		('PC')
		{ after(grammarAccess.getRegisterAccess().getPCEnumLiteralDeclaration_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlankLine__Group__0__Impl
	rule__BlankLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlankLineAccess().getBlankLineAction_0()); }
	()
	{ after(grammarAccess.getBlankLineAccess().getBlankLineAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlankLine__Group__1__Impl
	rule__BlankLine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlankLineAccess().getBlankLineAssignment_1()); }
	(rule__BlankLine__BlankLineAssignment_1)?
	{ after(grammarAccess.getBlankLineAccess().getBlankLineAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlankLine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlankLineAccess().getEndOfLineParserRuleCall_2()); }
	ruleEndOfLine
	{ after(grammarAccess.getBlankLineAccess().getEndOfLineParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommentLine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommentLine__Group__0__Impl
	rule__CommentLine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentLineAccess().getCommentAssignment_0()); }
	(rule__CommentLine__CommentAssignment_0)
	{ after(grammarAccess.getCommentLineAccess().getCommentAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommentLine__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentLineAccess().getEndOfLineParserRuleCall_1()); }
	ruleEndOfLine
	{ after(grammarAccess.getCommentLineAccess().getEndOfLineParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FccDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__0__Impl
	rule__FccDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getNameAssignment_0()); }
	(rule__FccDirective__NameAssignment_0)?
	{ after(grammarAccess.getFccDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__1__Impl
	rule__FccDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__2__Impl
	rule__FccDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__FccDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getFccDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__3__Impl
	rule__FccDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getGroup_3()); }
	(rule__FccDirective__Group_3__0)
	{ after(grammarAccess.getFccDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__4__Impl
	rule__FccDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getGroup_4()); }
	(rule__FccDirective__Group_4__0)?
	{ after(grammarAccess.getFccDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__5__Impl
	rule__FccDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getFccDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FccDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group_3__0__Impl
	rule__FccDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getStringAssignment_3_1()); }
	(rule__FccDirective__StringAssignment_3_1)
	{ after(grammarAccess.getFccDirectiveAccess().getStringAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FccDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group_4__0__Impl
	rule__FccDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getFccDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FccDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFccDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__FccDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getFccDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__0__Impl
	rule__RegDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getNameAssignment_0()); }
	(rule__RegDirective__NameAssignment_0)?
	{ after(grammarAccess.getRegDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__1__Impl
	rule__RegDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__2__Impl
	rule__RegDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__RegDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getRegDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__3__Impl
	rule__RegDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getGroup_3()); }
	(rule__RegDirective__Group_3__0)?
	{ after(grammarAccess.getRegDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__4__Impl
	rule__RegDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getGroup_4()); }
	(rule__RegDirective__Group_4__0)?
	{ after(grammarAccess.getRegDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getEndOfLineParserRuleCall_5()); }
	ruleEndOfLine
	{ after(grammarAccess.getRegDirectiveAccess().getEndOfLineParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_3__0__Impl
	rule__RegDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_3__1__Impl
	rule__RegDirective__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getOptionsAssignment_3_1()); }
	(rule__RegDirective__OptionsAssignment_3_1)
	{ after(grammarAccess.getRegDirectiveAccess().getOptionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getGroup_3_2()); }
	(rule__RegDirective__Group_3_2__0)*
	{ after(grammarAccess.getRegDirectiveAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegDirective__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_3_2__0__Impl
	rule__RegDirective__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getRegDirectiveAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getOptionsAssignment_3_2_1()); }
	(rule__RegDirective__OptionsAssignment_3_2_1)
	{ after(grammarAccess.getRegDirectiveAccess().getOptionsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RegDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_4__0__Impl
	rule__RegDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getRegDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RegDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRegDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__RegDirective__CommentAssignment_4_1)?
	{ after(grammarAccess.getRegDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpcDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__0__Impl
	rule__SpcDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getNameAssignment_0()); }
	(rule__SpcDirective__NameAssignment_0)?
	{ after(grammarAccess.getSpcDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__1__Impl
	rule__SpcDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__2__Impl
	rule__SpcDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__SpcDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getSpcDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__3__Impl
	rule__SpcDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getGroup_3()); }
	(rule__SpcDirective__Group_3__0)?
	{ after(grammarAccess.getSpcDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__4__Impl
	rule__SpcDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getGroup_4()); }
	(rule__SpcDirective__Group_4__0)?
	{ after(grammarAccess.getSpcDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__5__Impl
	rule__SpcDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getSpcDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpcDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_3__0__Impl
	rule__SpcDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_3__1__Impl
	rule__SpcDirective__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getSpaceCountAssignment_3_1()); }
	(rule__SpcDirective__SpaceCountAssignment_3_1)
	{ after(grammarAccess.getSpcDirectiveAccess().getSpaceCountAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getGroup_3_2()); }
	(rule__SpcDirective__Group_3_2__0)?
	{ after(grammarAccess.getSpcDirectiveAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpcDirective__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_3_2__0__Impl
	rule__SpcDirective__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getSpcDirectiveAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getKeepCountAssignment_3_2_1()); }
	(rule__SpcDirective__KeepCountAssignment_3_2_1)
	{ after(grammarAccess.getSpcDirectiveAccess().getKeepCountAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SpcDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_4__0__Impl
	rule__SpcDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getSpcDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SpcDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSpcDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__SpcDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getSpcDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__0__Impl
	rule__NamDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getNameAssignment_0()); }
	(rule__NamDirective__NameAssignment_0)?
	{ after(grammarAccess.getNamDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__1__Impl
	rule__NamDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__2__Impl
	rule__NamDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getAlternatives_2()); }
	(rule__NamDirective__Alternatives_2)
	{ after(grammarAccess.getNamDirectiveAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__3__Impl
	rule__NamDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_3()); }
	RULE_WS
	{ after(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__4__Impl
	rule__NamDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getOperandAssignment_4()); }
	(rule__NamDirective__OperandAssignment_4)
	{ after(grammarAccess.getNamDirectiveAccess().getOperandAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__5__Impl
	rule__NamDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getGroup_5()); }
	(rule__NamDirective__Group_5__0)?
	{ after(grammarAccess.getNamDirectiveAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getNamDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamDirective__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group_5__0__Impl
	rule__NamDirective__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_5_0()); }
	RULE_WS
	{ after(grammarAccess.getNamDirectiveAccess().getWSTerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamDirective__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamDirectiveAccess().getCommentAssignment_5_1()); }
	(rule__NamDirective__CommentAssignment_5_1)
	{ after(grammarAccess.getNamDirectiveAccess().getCommentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PagDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__0__Impl
	rule__PagDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getNameAssignment_0()); }
	(rule__PagDirective__NameAssignment_0)?
	{ after(grammarAccess.getPagDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__1__Impl
	rule__PagDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__2__Impl
	rule__PagDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__PagDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getPagDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__3__Impl
	rule__PagDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getGroup_3()); }
	(rule__PagDirective__Group_3__0)?
	{ after(grammarAccess.getPagDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__4__Impl
	rule__PagDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getGroup_4()); }
	(rule__PagDirective__Group_4__0)?
	{ after(grammarAccess.getPagDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getEndOfLineParserRuleCall_5()); }
	ruleEndOfLine
	{ after(grammarAccess.getPagDirectiveAccess().getEndOfLineParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PagDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group_3__0__Impl
	rule__PagDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getOperandAssignment_3_1()); }
	(rule__PagDirective__OperandAssignment_3_1)?
	{ after(grammarAccess.getPagDirectiveAccess().getOperandAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PagDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group_4__0__Impl
	rule__PagDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getPagDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PagDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPagDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__PagDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getPagDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OptDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__0__Impl
	rule__OptDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getNameAssignment_0()); }
	(rule__OptDirective__NameAssignment_0)?
	{ after(grammarAccess.getOptDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__1__Impl
	rule__OptDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__2__Impl
	rule__OptDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__OptDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getOptDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__3__Impl
	rule__OptDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getGroup_3()); }
	(rule__OptDirective__Group_3__0)?
	{ after(grammarAccess.getOptDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__4__Impl
	rule__OptDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getGroup_4()); }
	(rule__OptDirective__Group_4__0)?
	{ after(grammarAccess.getOptDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getEndOfLineParserRuleCall_5()); }
	ruleEndOfLine
	{ after(grammarAccess.getOptDirectiveAccess().getEndOfLineParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OptDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_3__0__Impl
	rule__OptDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_3__1__Impl
	rule__OptDirective__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getOptionsAssignment_3_1()); }
	(rule__OptDirective__OptionsAssignment_3_1)
	{ after(grammarAccess.getOptDirectiveAccess().getOptionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getGroup_3_2()); }
	(rule__OptDirective__Group_3_2__0)*
	{ after(grammarAccess.getOptDirectiveAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OptDirective__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_3_2__0__Impl
	rule__OptDirective__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getCommaKeyword_3_2_0()); }
	','
	{ after(grammarAccess.getOptDirectiveAccess().getCommaKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getOptionsAssignment_3_2_1()); }
	(rule__OptDirective__OptionsAssignment_3_2_1)
	{ after(grammarAccess.getOptDirectiveAccess().getOptionsAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OptDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_4__0__Impl
	rule__OptDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getOptDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OptDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOptDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__OptDirective__CommentAssignment_4_1)?
	{ after(grammarAccess.getOptDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group__0__Impl
	rule__FailDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getNameAssignment_0()); }
	(rule__FailDirective__NameAssignment_0)?
	{ after(grammarAccess.getFailDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group__1__Impl
	rule__FailDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getFailDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group__2__Impl
	rule__FailDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__FailDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getFailDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group__3__Impl
	rule__FailDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getGroup_3()); }
	(rule__FailDirective__Group_3__0)?
	{ after(grammarAccess.getFailDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getEndOfLineParserRuleCall_4()); }
	ruleEndOfLine
	{ after(grammarAccess.getFailDirectiveAccess().getEndOfLineParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group_3__0__Impl
	rule__FailDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getFailDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailDirectiveAccess().getCommentAssignment_3_1()); }
	(rule__FailDirective__CommentAssignment_3_1)?
	{ after(grammarAccess.getFailDirectiveAccess().getCommentAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__0__Impl
	rule__SetDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getNameAssignment_0()); }
	(rule__SetDirective__NameAssignment_0)?
	{ after(grammarAccess.getSetDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__1__Impl
	rule__SetDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__2__Impl
	rule__SetDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__SetDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getSetDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__3__Impl
	rule__SetDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_3()); }
	RULE_WS
	{ after(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__4__Impl
	rule__SetDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getAlternatives_4()); }
	(rule__SetDirective__Alternatives_4)
	{ after(grammarAccess.getSetDirectiveAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__5__Impl
	rule__SetDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getSetDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__6__Impl
	rule__SetDirective__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getCommentAssignment_6()); }
	(rule__SetDirective__CommentAssignment_6)?
	{ after(grammarAccess.getSetDirectiveAccess().getCommentAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getEndOfLineParserRuleCall_7()); }
	ruleEndOfLine
	{ after(grammarAccess.getSetDirectiveAccess().getEndOfLineParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetDirective__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group_4_0__0__Impl
	rule__SetDirective__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAssignment_4_0_0()); }
	(rule__SetDirective__IsRelativeToPCAssignment_4_0_0)?
	{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetDirective__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetDirectiveAccess().getOperandAssignment_4_0_1()); }
	(rule__SetDirective__OperandAssignment_4_0_1)
	{ after(grammarAccess.getSetDirectiveAccess().getOperandAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__0__Impl
	rule__FillDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getNameAssignment_0()); }
	(rule__FillDirective__NameAssignment_0)?
	{ after(grammarAccess.getFillDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__1__Impl
	rule__FillDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getGroup_1()); }
	(rule__FillDirective__Group_1__0)
	{ after(grammarAccess.getFillDirectiveAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__2__Impl
	rule__FillDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getGroup_2()); }
	(rule__FillDirective__Group_2__0)
	{ after(grammarAccess.getFillDirectiveAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__3__Impl
	rule__FillDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getGroup_3()); }
	(rule__FillDirective__Group_3__0)?
	{ after(grammarAccess.getFillDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__4__Impl
	rule__FillDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getEndOfLineParserRuleCall_5()); }
	ruleEndOfLine
	{ after(grammarAccess.getFillDirectiveAccess().getEndOfLineParserRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillDirective__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_1__0__Impl
	rule__FillDirective__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_1_0()); }
	RULE_WS
	{ after(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getDirectiveAssignment_1_1()); }
	(rule__FillDirective__DirectiveAssignment_1_1)
	{ after(grammarAccess.getFillDirectiveAccess().getDirectiveAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillDirective__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_2__0__Impl
	rule__FillDirective__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_2_0()); }
	RULE_WS
	{ after(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_2__1__Impl
	rule__FillDirective__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getValueAssignment_2_1()); }
	(rule__FillDirective__ValueAssignment_2_1)
	{ after(grammarAccess.getFillDirectiveAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_2__2__Impl
	rule__FillDirective__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getCommaKeyword_2_2()); }
	','
	{ after(grammarAccess.getFillDirectiveAccess().getCommaKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getNumberAssignment_2_3()); }
	(rule__FillDirective__NumberAssignment_2_3)
	{ after(grammarAccess.getFillDirectiveAccess().getNumberAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_3__0__Impl
	rule__FillDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getFillDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillDirectiveAccess().getCommentAssignment_3_1()); }
	(rule__FillDirective__CommentAssignment_3_1)
	{ after(grammarAccess.getFillDirectiveAccess().getCommentAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BszDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__0__Impl
	rule__BszDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getNameAssignment_0()); }
	(rule__BszDirective__NameAssignment_0)?
	{ after(grammarAccess.getBszDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__1__Impl
	rule__BszDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__2__Impl
	rule__BszDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__BszDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getBszDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__3__Impl
	rule__BszDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getGroup_3()); }
	(rule__BszDirective__Group_3__0)
	{ after(grammarAccess.getBszDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__4__Impl
	rule__BszDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getGroup_4()); }
	(rule__BszDirective__Group_4__0)?
	{ after(grammarAccess.getBszDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__5__Impl
	rule__BszDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getBszDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BszDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group_3__0__Impl
	rule__BszDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getOperandAssignment_3_1()); }
	(rule__BszDirective__OperandAssignment_3_1)
	{ after(grammarAccess.getBszDirectiveAccess().getOperandAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BszDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group_4__0__Impl
	rule__BszDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getBszDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BszDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBszDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__BszDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getBszDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FdbDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__0__Impl
	rule__FdbDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getNameAssignment_0()); }
	(rule__FdbDirective__NameAssignment_0)?
	{ after(grammarAccess.getFdbDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__1__Impl
	rule__FdbDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__2__Impl
	rule__FdbDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__FdbDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getFdbDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__3__Impl
	rule__FdbDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getGroup_3()); }
	(rule__FdbDirective__Group_3__0)?
	{ after(grammarAccess.getFdbDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__4__Impl
	rule__FdbDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getGroup_4()); }
	(rule__FdbDirective__Group_4__0)?
	{ after(grammarAccess.getFdbDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__5__Impl
	rule__FdbDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getFdbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FdbDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group_3__0__Impl
	rule__FdbDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getOperandAssignment_3_1()); }
	(rule__FdbDirective__OperandAssignment_3_1)
	{ after(grammarAccess.getFdbDirectiveAccess().getOperandAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FdbDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group_4__0__Impl
	rule__FdbDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getFdbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FdbDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFdbDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__FdbDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getFdbDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FcbDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__0__Impl
	rule__FcbDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getNameAssignment_0()); }
	(rule__FcbDirective__NameAssignment_0)?
	{ after(grammarAccess.getFcbDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__1__Impl
	rule__FcbDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__2__Impl
	rule__FcbDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__FcbDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getFcbDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__3__Impl
	rule__FcbDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getGroup_3()); }
	(rule__FcbDirective__Group_3__0)?
	{ after(grammarAccess.getFcbDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__4__Impl
	rule__FcbDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getGroup_4()); }
	(rule__FcbDirective__Group_4__0)?
	{ after(grammarAccess.getFcbDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__5__Impl
	rule__FcbDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getFcbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FcbDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group_3__0__Impl
	rule__FcbDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getOperandAssignment_3_1()); }
	(rule__FcbDirective__OperandAssignment_3_1)
	{ after(grammarAccess.getFcbDirectiveAccess().getOperandAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FcbDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group_4__0__Impl
	rule__FcbDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getFcbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FcbDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcbDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__FcbDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getFcbDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RmbDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__0__Impl
	rule__RmbDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getNameAssignment_0()); }
	(rule__RmbDirective__NameAssignment_0)?
	{ after(grammarAccess.getRmbDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__1__Impl
	rule__RmbDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__2__Impl
	rule__RmbDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__RmbDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getRmbDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__3__Impl
	rule__RmbDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getGroup_3()); }
	(rule__RmbDirective__Group_3__0)?
	{ after(grammarAccess.getRmbDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__4__Impl
	rule__RmbDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getGroup_4()); }
	(rule__RmbDirective__Group_4__0)?
	{ after(grammarAccess.getRmbDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__5__Impl
	rule__RmbDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getRmbDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RmbDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_3__0__Impl
	rule__RmbDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getGroup_3_1()); }
	(rule__RmbDirective__Group_3_1__0)
	{ after(grammarAccess.getRmbDirectiveAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RmbDirective__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_3_1__0__Impl
	rule__RmbDirective__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAssignment_3_1_0()); }
	(rule__RmbDirective__IsRelativeToPCAssignment_3_1_0)?
	{ after(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getOperandAssignment_3_1_1()); }
	(rule__RmbDirective__OperandAssignment_3_1_1)
	{ after(grammarAccess.getRmbDirectiveAccess().getOperandAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RmbDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_4__0__Impl
	rule__RmbDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getRmbDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RmbDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRmbDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__RmbDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getRmbDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__0__Impl
	rule__EndDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getNameAssignment_0()); }
	(rule__EndDirective__NameAssignment_0)?
	{ after(grammarAccess.getEndDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__1__Impl
	rule__EndDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__2__Impl
	rule__EndDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__EndDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getEndDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__3__Impl
	rule__EndDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getGroup_3()); }
	(rule__EndDirective__Group_3__0)?
	{ after(grammarAccess.getEndDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__4__Impl
	rule__EndDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getGroup_4()); }
	(rule__EndDirective__Group_4__0)?
	{ after(grammarAccess.getEndDirectiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__5__Impl
	rule__EndDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getEndDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_3__0__Impl
	rule__EndDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getAlternatives_3_1()); }
	(rule__EndDirective__Alternatives_3_1)
	{ after(grammarAccess.getEndDirectiveAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndDirective__Group_3_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_3_1_0__0__Impl
	rule__EndDirective__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAssignment_3_1_0_0()); }
	(rule__EndDirective__IsRelativeToPCAssignment_3_1_0_0)?
	{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAssignment_3_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_3_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getOperandAssignment_3_1_0_1()); }
	(rule__EndDirective__OperandAssignment_3_1_0_1)
	{ after(grammarAccess.getEndDirectiveAccess().getOperandAssignment_3_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndDirective__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_4__0__Impl
	rule__EndDirective__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_4_0()); }
	RULE_WS
	{ after(grammarAccess.getEndDirectiveAccess().getWSTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndDirective__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndDirectiveAccess().getCommentAssignment_4_1()); }
	(rule__EndDirective__CommentAssignment_4_1)
	{ after(grammarAccess.getEndDirectiveAccess().getCommentAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrgDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__0__Impl
	rule__OrgDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getNameAssignment_0()); }
	(rule__OrgDirective__NameAssignment_0)?
	{ after(grammarAccess.getOrgDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__1__Impl
	rule__OrgDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__2__Impl
	rule__OrgDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__OrgDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getOrgDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__3__Impl
	rule__OrgDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getGroup_3()); }
	(rule__OrgDirective__Group_3__0)?
	{ after(grammarAccess.getOrgDirectiveAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__4__Impl
	rule__OrgDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_4()); }
	(RULE_WS)?
	{ after(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__5__Impl
	rule__OrgDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getCommentAssignment_5()); }
	(rule__OrgDirective__CommentAssignment_5)?
	{ after(grammarAccess.getOrgDirectiveAccess().getCommentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getEndOfLineParserRuleCall_6()); }
	ruleEndOfLine
	{ after(grammarAccess.getOrgDirectiveAccess().getEndOfLineParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrgDirective__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group_3__0__Impl
	rule__OrgDirective__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_3_0()); }
	RULE_WS
	{ after(grammarAccess.getOrgDirectiveAccess().getWSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getAlternatives_3_1()); }
	(rule__OrgDirective__Alternatives_3_1)
	{ after(grammarAccess.getOrgDirectiveAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrgDirective__Group_3_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group_3_1_0__0__Impl
	rule__OrgDirective__Group_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAssignment_3_1_0_0()); }
	(rule__OrgDirective__IsRelativeToPCAssignment_3_1_0_0)?
	{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAssignment_3_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrgDirective__Group_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__Group_3_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrgDirectiveAccess().getOperandAssignment_3_1_0_1()); }
	(rule__OrgDirective__OperandAssignment_3_1_0_1)
	{ after(grammarAccess.getOrgDirectiveAccess().getOperandAssignment_3_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__0__Impl
	rule__EquDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getNameAssignment_0()); }
	(rule__EquDirective__NameAssignment_0)?
	{ after(grammarAccess.getEquDirectiveAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__1__Impl
	rule__EquDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
	{ after(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__2__Impl
	rule__EquDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getDirectiveAssignment_2()); }
	(rule__EquDirective__DirectiveAssignment_2)
	{ after(grammarAccess.getEquDirectiveAccess().getDirectiveAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__3__Impl
	rule__EquDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_3()); }
	RULE_WS
	{ after(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__4__Impl
	rule__EquDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getAlternatives_4()); }
	(rule__EquDirective__Alternatives_4)
	{ after(grammarAccess.getEquDirectiveAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__5__Impl
	rule__EquDirective__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_5()); }
	(RULE_WS)?
	{ after(grammarAccess.getEquDirectiveAccess().getWSTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__6__Impl
	rule__EquDirective__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getCommentAssignment_6()); }
	(rule__EquDirective__CommentAssignment_6)?
	{ after(grammarAccess.getEquDirectiveAccess().getCommentAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getEndOfLineParserRuleCall_7()); }
	ruleEndOfLine
	{ after(grammarAccess.getEquDirectiveAccess().getEndOfLineParserRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquDirective__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group_4_0__0__Impl
	rule__EquDirective__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAssignment_4_0_0()); }
	(rule__EquDirective__IsRelativeToPCAssignment_4_0_0)?
	{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquDirective__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquDirectiveAccess().getOperandAssignment_4_0_1()); }
	(rule__EquDirective__OperandAssignment_4_0_1)
	{ after(grammarAccess.getEquDirectiveAccess().getOperandAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfExpression__Group__0__Impl
	rule__ListOfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfExpressionAccess().getExpressionsAssignment_0()); }
	(rule__ListOfExpression__ExpressionsAssignment_0)
	{ after(grammarAccess.getListOfExpressionAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfExpressionAccess().getGroup_1()); }
	(rule__ListOfExpression__Group_1__0)*
	{ after(grammarAccess.getListOfExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListOfExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfExpression__Group_1__0__Impl
	rule__ListOfExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfExpressionAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getListOfExpressionAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListOfExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListOfExpressionAccess().getExpressionsAssignment_1_1()); }
	(rule__ListOfExpression__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getListOfExpressionAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getDivisionParserRuleCall_0()); }
	ruleDivision
	{ after(grammarAccess.getMultiplicationAccess().getDivisionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getOperationAssignment_1_1()); }
	(rule__Multiplication__OperationAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getOperationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
	(rule__Multiplication__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__0__Impl
	rule__Division__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getModuloParserRuleCall_0()); }
	ruleModulo
	{ after(grammarAccess.getDivisionAccess().getModuloParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getGroup_1()); }
	(rule__Division__Group_1__0)*
	{ after(grammarAccess.getDivisionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group_1__0__Impl
	rule__Division__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getDivisionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getDivisionAccess().getDivisionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group_1__1__Impl
	rule__Division__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getOpretationAssignment_1_1()); }
	(rule__Division__OpretationAssignment_1_1)
	{ after(grammarAccess.getDivisionAccess().getOpretationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getRightAssignment_1_2()); }
	(rule__Division__RightAssignment_1_2)
	{ after(grammarAccess.getDivisionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__0__Impl
	rule__Modulo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
	{ after(grammarAccess.getModuloAccess().getAdditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getGroup_1()); }
	(rule__Modulo__Group_1__0)*
	{ after(grammarAccess.getModuloAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modulo__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__0__Impl
	rule__Modulo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getModuloLeftAction_1_0()); }
	()
	{ after(grammarAccess.getModuloAccess().getModuloLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__1__Impl
	rule__Modulo__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getOpretationAssignment_1_1()); }
	(rule__Modulo__OpretationAssignment_1_1)
	{ after(grammarAccess.getModuloAccess().getOpretationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modulo__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuloAccess().getRightAssignment_1_2()); }
	(rule__Modulo__RightAssignment_1_2)
	{ after(grammarAccess.getModuloAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getSubstractionParserRuleCall_0()); }
	ruleSubstraction
	{ after(grammarAccess.getAdditionAccess().getSubstractionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
	rule__Addition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_1()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
	(rule__Addition__RightAssignment_1_2)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Substraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__0__Impl
	rule__Substraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getLeftShiftParserRuleCall_0()); }
	ruleLeftShift
	{ after(grammarAccess.getSubstractionAccess().getLeftShiftParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getGroup_1()); }
	(rule__Substraction__Group_1__0)*
	{ after(grammarAccess.getSubstractionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Substraction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group_1__0__Impl
	rule__Substraction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getSubstractionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getSubstractionAccess().getSubstractionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group_1__1__Impl
	rule__Substraction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_1_1()); }
	('-')
	{ after(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getRightAssignment_1_2()); }
	(rule__Substraction__RightAssignment_1_2)
	{ after(grammarAccess.getSubstractionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftShift__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftShift__Group__0__Impl
	rule__LeftShift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftShiftAccess().getRightShiftParserRuleCall_0()); }
	ruleRightShift
	{ after(grammarAccess.getLeftShiftAccess().getRightShiftParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftShift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftShiftAccess().getGroup_1()); }
	(rule__LeftShift__Group_1__0)*
	{ after(grammarAccess.getLeftShiftAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LeftShift__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftShift__Group_1__0__Impl
	rule__LeftShift__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftShiftAccess().getLeftShiftLeftAction_1_0()); }
	()
	{ after(grammarAccess.getLeftShiftAccess().getLeftShiftLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftShift__Group_1__1__Impl
	rule__LeftShift__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftShiftAccess().getLessThanSignLessThanSignKeyword_1_1()); }
	'<<'
	{ after(grammarAccess.getLeftShiftAccess().getLessThanSignLessThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LeftShift__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLeftShiftAccess().getRightAssignment_1_2()); }
	(rule__LeftShift__RightAssignment_1_2)
	{ after(grammarAccess.getLeftShiftAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightShift__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightShift__Group__0__Impl
	rule__RightShift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightShiftAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getRightShiftAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightShift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightShiftAccess().getGroup_1()); }
	(rule__RightShift__Group_1__0)*
	{ after(grammarAccess.getRightShiftAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RightShift__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightShift__Group_1__0__Impl
	rule__RightShift__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightShiftAccess().getRightShiftLeftAction_1_0()); }
	()
	{ after(grammarAccess.getRightShiftAccess().getRightShiftLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightShift__Group_1__1__Impl
	rule__RightShift__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightShiftAccess().getGreaterThanSignGreaterThanSignKeyword_1_1()); }
	'>>'
	{ after(grammarAccess.getRightShiftAccess().getGreaterThanSignGreaterThanSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RightShift__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRightShiftAccess().getRightAssignment_1_2()); }
	(rule__RightShift__RightAssignment_1_2)
	{ after(grammarAccess.getRightShiftAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getOrParserRuleCall_0()); }
	ruleOr
	{ after(grammarAccess.getAndAccess().getOrParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
	(rule__And__RightAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getXorParserRuleCall_0()); }
	ruleXor
	{ after(grammarAccess.getOrAccess().getXorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
	(rule__Or__RightAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor__Group__0__Impl
	rule__Xor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getXorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorAccess().getGroup_1()); }
	(rule__Xor__Group_1__0)*
	{ after(grammarAccess.getXorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Xor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor__Group_1__0__Impl
	rule__Xor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorAccess().getXorLeftAction_1_0()); }
	()
	{ after(grammarAccess.getXorAccess().getXorLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor__Group_1__1__Impl
	rule__Xor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorAccess().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getXorAccess().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorAccess().getRightAssignment_1_2()); }
	(rule__Xor__RightAssignment_1_2)
	{ after(grammarAccess.getXorAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__0__Impl
	rule__Primary__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_6_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__1__Impl
	rule__Primary__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_6_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getValueAssignment_6_2()); }
	(rule__Primary__ValueAssignment_6_2)
	{ after(grammarAccess.getPrimaryAccess().getValueAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__0__Impl
	rule__Primary__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_7_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__1__Impl
	rule__Primary__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getMultiplicationParserRuleCall_7_1()); }
	ruleMultiplication
	{ after(grammarAccess.getPrimaryAccess().getMultiplicationParserRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_7_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DecimalValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValue__Group__0__Impl
	rule__DecimalValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueAccess().getSignAssignment_0()); }
	(rule__DecimalValue__SignAssignment_0)?
	{ after(grammarAccess.getDecimalValueAccess().getSignAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DecimalValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); }
	(rule__DecimalValue__ValueAssignment_1)
	{ after(grammarAccess.getDecimalValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__SourceLinesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSourceLinesSourceLineParserRuleCall_0()); }
		ruleSourceLine
		{ after(grammarAccess.getModelAccess().getSourceLinesSourceLineParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceLine__LineContentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentBlankLineParserRuleCall_0_0()); }
		ruleBlankLine
		{ after(grammarAccess.getSourceLineAccess().getLineContentBlankLineParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceLine__LineContentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentCommentLineParserRuleCall_1_0()); }
		ruleCommentLine
		{ after(grammarAccess.getSourceLineAccess().getLineContentCommentLineParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceLine__LineContentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceLineAccess().getLineContentDirectiveLineParserRuleCall_2_0()); }
		ruleDirectiveLine
		{ after(grammarAccess.getSourceLineAccess().getLineContentDirectiveLineParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlankLine__BlankLineAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlankLineAccess().getBlankLineWSTerminalRuleCall_1_0()); }
		RULE_WS
		{ after(grammarAccess.getBlankLineAccess().getBlankLineWSTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommentLine__CommentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentLineAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_0_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getCommentLineAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveEquDirectiveParserRuleCall_0_0()); }
		ruleEquDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveEquDirectiveParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveOrgDirectiveParserRuleCall_1_0()); }
		ruleOrgDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveOrgDirectiveParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveBszDirectiveParserRuleCall_2_0()); }
		ruleBszDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveBszDirectiveParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveEndDirectiveParserRuleCall_3_0()); }
		ruleEndDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveEndDirectiveParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveFailDirectiveParserRuleCall_4_0()); }
		ruleFailDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveFailDirectiveParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveFillDirectiveParserRuleCall_5_0()); }
		ruleFillDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveFillDirectiveParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveOptDirectiveParserRuleCall_6_0()); }
		ruleOptDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveOptDirectiveParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectivePagDirectiveParserRuleCall_7_0()); }
		rulePagDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectivePagDirectiveParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveNamDirectiveParserRuleCall_8_0()); }
		ruleNamDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveNamDirectiveParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveSetDirectiveParserRuleCall_9_0()); }
		ruleSetDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveSetDirectiveParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveSpcDirectiveParserRuleCall_10_0()); }
		ruleSpcDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveSpcDirectiveParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveRegDirectiveParserRuleCall_11_0()); }
		ruleRegDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveRegDirectiveParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveFcbDirectiveParserRuleCall_12_0()); }
		ruleFcbDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveFcbDirectiveParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveFdbDirectiveParserRuleCall_13_0()); }
		ruleFdbDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveFdbDirectiveParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveFccDirectiveParserRuleCall_14_0()); }
		ruleFccDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveFccDirectiveParserRuleCall_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectiveLine__DirectiveAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectiveLineAccess().getDirectiveRmbDirectiveParserRuleCall_15_0()); }
		ruleRmbDirective
		{ after(grammarAccess.getDirectiveLineAccess().getDirectiveRmbDirectiveParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFccDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getFccDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFccDirectiveAccess().getDirectiveFCCKeyword_2_0()); }
		(
			{ before(grammarAccess.getFccDirectiveAccess().getDirectiveFCCKeyword_2_0()); }
			'FCC'
			{ after(grammarAccess.getFccDirectiveAccess().getDirectiveFCCKeyword_2_0()); }
		)
		{ after(grammarAccess.getFccDirectiveAccess().getDirectiveFCCKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__StringAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFccDirectiveAccess().getStringSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getFccDirectiveAccess().getStringSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FccDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFccDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getFccDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getRegDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getDirectiveREGKeyword_2_0()); }
		(
			{ before(grammarAccess.getRegDirectiveAccess().getDirectiveREGKeyword_2_0()); }
			'REG'
			{ after(grammarAccess.getRegDirectiveAccess().getDirectiveREGKeyword_2_0()); }
		)
		{ after(grammarAccess.getRegDirectiveAccess().getDirectiveREGKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__OptionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getOptionsRegisterEnumRuleCall_3_1_0()); }
		ruleRegister
		{ after(grammarAccess.getRegDirectiveAccess().getOptionsRegisterEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__OptionsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getOptionsRegisterEnumRuleCall_3_2_1_0()); }
		ruleRegister
		{ after(grammarAccess.getRegDirectiveAccess().getOptionsRegisterEnumRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RegDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRegDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getRegDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getSpcDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getDirectiveSPCKeyword_2_0()); }
		(
			{ before(grammarAccess.getSpcDirectiveAccess().getDirectiveSPCKeyword_2_0()); }
			'SPC'
			{ after(grammarAccess.getSpcDirectiveAccess().getDirectiveSPCKeyword_2_0()); }
		)
		{ after(grammarAccess.getSpcDirectiveAccess().getDirectiveSPCKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__SpaceCountAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getSpaceCountExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSpcDirectiveAccess().getSpaceCountExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__KeepCountAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getKeepCountExpressionParserRuleCall_3_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSpcDirectiveAccess().getKeepCountExpressionParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SpcDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpcDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getSpcDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getNamDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__DirectiveAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getDirectiveNAMKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getNamDirectiveAccess().getDirectiveNAMKeyword_2_0_0()); }
			'NAM'
			{ after(grammarAccess.getNamDirectiveAccess().getDirectiveNAMKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getNamDirectiveAccess().getDirectiveNAMKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__DirectiveAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getDirectiveTTLKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getNamDirectiveAccess().getDirectiveTTLKeyword_2_1_0()); }
			'TTL'
			{ after(grammarAccess.getNamDirectiveAccess().getDirectiveTTLKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getNamDirectiveAccess().getDirectiveTTLKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__OperandAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getOperandIdentifierValueParserRuleCall_4_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getNamDirectiveAccess().getOperandIdentifierValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamDirective__CommentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_5_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getNamDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPagDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getPagDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPagDirectiveAccess().getDirectivePAGKeyword_2_0()); }
		(
			{ before(grammarAccess.getPagDirectiveAccess().getDirectivePAGKeyword_2_0()); }
			'PAG'
			{ after(grammarAccess.getPagDirectiveAccess().getDirectivePAGKeyword_2_0()); }
		)
		{ after(grammarAccess.getPagDirectiveAccess().getDirectivePAGKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__OperandAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPagDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPagDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PagDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPagDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getPagDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getOptDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getDirectiveOPTKeyword_2_0()); }
		(
			{ before(grammarAccess.getOptDirectiveAccess().getDirectiveOPTKeyword_2_0()); }
			'OPT'
			{ after(grammarAccess.getOptDirectiveAccess().getDirectiveOPTKeyword_2_0()); }
		)
		{ after(grammarAccess.getOptDirectiveAccess().getDirectiveOPTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__OptionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getOptionsAssemblyOptionEnumRuleCall_3_1_0()); }
		ruleAssemblyOption
		{ after(grammarAccess.getOptDirectiveAccess().getOptionsAssemblyOptionEnumRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__OptionsAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getOptionsAssemblyOptionEnumRuleCall_3_2_1_0()); }
		ruleAssemblyOption
		{ after(grammarAccess.getOptDirectiveAccess().getOptionsAssemblyOptionEnumRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OptDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getOptDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getFailDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailDirectiveAccess().getDirectiveFAILKeyword_2_0()); }
		(
			{ before(grammarAccess.getFailDirectiveAccess().getDirectiveFAILKeyword_2_0()); }
			'FAIL'
			{ after(grammarAccess.getFailDirectiveAccess().getDirectiveFAILKeyword_2_0()); }
		)
		{ after(grammarAccess.getFailDirectiveAccess().getDirectiveFAILKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailDirective__CommentAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_3_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getFailDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getSetDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getDirectiveSETKeyword_2_0()); }
		(
			{ before(grammarAccess.getSetDirectiveAccess().getDirectiveSETKeyword_2_0()); }
			'SET'
			{ after(grammarAccess.getSetDirectiveAccess().getDirectiveSETKeyword_2_0()); }
		)
		{ after(grammarAccess.getSetDirectiveAccess().getDirectiveSETKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__IsRelativeToPCAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
		(
			{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
			'*'
			{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
		)
		{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__OperandAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getOperandExpressionParserRuleCall_4_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSetDirectiveAccess().getOperandExpressionParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__IsRelativeToPCAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
			'*'
			{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getSetDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetDirective__CommentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_6_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getSetDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getFillDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__DirectiveAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getDirectiveFILLKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getFillDirectiveAccess().getDirectiveFILLKeyword_1_1_0()); }
			'FILL'
			{ after(grammarAccess.getFillDirectiveAccess().getDirectiveFILLKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getFillDirectiveAccess().getDirectiveFILLKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getValueExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getFillDirectiveAccess().getValueExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__NumberAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getNumberExpressionParserRuleCall_2_3_0()); }
		ruleExpression
		{ after(grammarAccess.getFillDirectiveAccess().getNumberExpressionParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillDirective__CommentAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_3_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getFillDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getBszDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getDirectiveAlternatives_2_0()); }
		(rule__BszDirective__DirectiveAlternatives_2_0)
		{ after(grammarAccess.getBszDirectiveAccess().getDirectiveAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__OperandAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getBszDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BszDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBszDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getBszDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFdbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getFdbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFdbDirectiveAccess().getDirectiveFDBKeyword_2_0()); }
		(
			{ before(grammarAccess.getFdbDirectiveAccess().getDirectiveFDBKeyword_2_0()); }
			'FDB'
			{ after(grammarAccess.getFdbDirectiveAccess().getDirectiveFDBKeyword_2_0()); }
		)
		{ after(grammarAccess.getFdbDirectiveAccess().getDirectiveFDBKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__OperandAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFdbDirectiveAccess().getOperandListOfExpressionParserRuleCall_3_1_0()); }
		ruleListOfExpression
		{ after(grammarAccess.getFdbDirectiveAccess().getOperandListOfExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FdbDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFdbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getFdbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getFcbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcbDirectiveAccess().getDirectiveFCBKeyword_2_0()); }
		(
			{ before(grammarAccess.getFcbDirectiveAccess().getDirectiveFCBKeyword_2_0()); }
			'FCB'
			{ after(grammarAccess.getFcbDirectiveAccess().getDirectiveFCBKeyword_2_0()); }
		)
		{ after(grammarAccess.getFcbDirectiveAccess().getDirectiveFCBKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__OperandAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcbDirectiveAccess().getOperandListOfExpressionParserRuleCall_3_1_0()); }
		ruleListOfExpression
		{ after(grammarAccess.getFcbDirectiveAccess().getOperandListOfExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FcbDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getFcbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getRmbDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getDirectiveRMBKeyword_2_0()); }
		(
			{ before(grammarAccess.getRmbDirectiveAccess().getDirectiveRMBKeyword_2_0()); }
			'RMB'
			{ after(grammarAccess.getRmbDirectiveAccess().getDirectiveRMBKeyword_2_0()); }
		)
		{ after(grammarAccess.getRmbDirectiveAccess().getDirectiveRMBKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__IsRelativeToPCAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0()); }
		(
			{ before(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0()); }
			'*'
			{ after(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0()); }
		)
		{ after(grammarAccess.getRmbDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__OperandAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getOperandExpressionParserRuleCall_3_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getRmbDirectiveAccess().getOperandExpressionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RmbDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRmbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getRmbDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getEndDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getDirectiveENDKeyword_2_0()); }
		(
			{ before(grammarAccess.getEndDirectiveAccess().getDirectiveENDKeyword_2_0()); }
			'END'
			{ after(grammarAccess.getEndDirectiveAccess().getDirectiveENDKeyword_2_0()); }
		)
		{ after(grammarAccess.getEndDirectiveAccess().getDirectiveENDKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__IsRelativeToPCAssignment_3_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
		(
			{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
			'*'
			{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
		)
		{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__OperandAssignment_3_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEndDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__IsRelativeToPCAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
		(
			{ before(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
			'*'
			{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
		)
		{ after(grammarAccess.getEndDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndDirective__CommentAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getEndDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getOrgDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getDirectiveORGKeyword_2_0()); }
		(
			{ before(grammarAccess.getOrgDirectiveAccess().getDirectiveORGKeyword_2_0()); }
			'ORG'
			{ after(grammarAccess.getOrgDirectiveAccess().getDirectiveORGKeyword_2_0()); }
		)
		{ after(grammarAccess.getOrgDirectiveAccess().getDirectiveORGKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__IsRelativeToPCAssignment_3_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
		(
			{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
			'*'
			{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
		)
		{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__OperandAssignment_3_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getOrgDirectiveAccess().getOperandExpressionParserRuleCall_3_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__IsRelativeToPCAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
		(
			{ before(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
			'*'
			{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
		)
		{ after(grammarAccess.getOrgDirectiveAccess().getIsRelativeToPCAsteriskKeyword_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrgDirective__CommentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrgDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_5_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getOrgDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getEquDirectiveAccess().getNameIdentifierValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__DirectiveAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getDirectiveEQUKeyword_2_0()); }
		(
			{ before(grammarAccess.getEquDirectiveAccess().getDirectiveEQUKeyword_2_0()); }
			'EQU'
			{ after(grammarAccess.getEquDirectiveAccess().getDirectiveEQUKeyword_2_0()); }
		)
		{ after(grammarAccess.getEquDirectiveAccess().getDirectiveEQUKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__IsRelativeToPCAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
		(
			{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
			'*'
			{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
		)
		{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__OperandAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getOperandExpressionParserRuleCall_4_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEquDirectiveAccess().getOperandExpressionParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__IsRelativeToPCAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
			'*'
			{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getEquDirectiveAccess().getIsRelativeToPCAsteriskKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquDirective__CommentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_6_0()); }
		RULE_ANY_EXCEPT_COMMENT_END_OF_LINE
		{ after(grammarAccess.getEquDirectiveAccess().getCommentANY_EXCEPT_COMMENT_END_OF_LINETerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfExpressionAccess().getExpressionsExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getListOfExpressionAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfExpression__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListOfExpressionAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getListOfExpressionAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__OperandAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getOperandMultiplicationParserRuleCall_0()); }
		ruleMultiplication
		{ after(grammarAccess.getExpressionAccess().getOperandMultiplicationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__OperationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getOperationAsteriskKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getMultiplicationAccess().getOperationAsteriskKeyword_1_1_0()); }
			'*'
			{ after(grammarAccess.getMultiplicationAccess().getOperationAsteriskKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getMultiplicationAccess().getOperationAsteriskKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightDivisionParserRuleCall_1_2_0()); }
		ruleDivision
		{ after(grammarAccess.getMultiplicationAccess().getRightDivisionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__OpretationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getOpretationSolidusKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getDivisionAccess().getOpretationSolidusKeyword_1_1_0()); }
			'/'
			{ after(grammarAccess.getDivisionAccess().getOpretationSolidusKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getDivisionAccess().getOpretationSolidusKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getRightModuloParserRuleCall_1_2_0()); }
		ruleModulo
		{ after(grammarAccess.getDivisionAccess().getRightModuloParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__OpretationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getOpretationPercentSignKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getModuloAccess().getOpretationPercentSignKeyword_1_1_0()); }
			'%'
			{ after(grammarAccess.getModuloAccess().getOpretationPercentSignKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getModuloAccess().getOpretationPercentSignKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modulo__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuloAccess().getRightAdditionParserRuleCall_1_2_0()); }
		ruleAddition
		{ after(grammarAccess.getModuloAccess().getRightAdditionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightSubstractionParserRuleCall_1_2_0()); }
		ruleSubstraction
		{ after(grammarAccess.getAdditionAccess().getRightSubstractionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstractionAccess().getRightLeftShiftParserRuleCall_1_2_0()); }
		ruleLeftShift
		{ after(grammarAccess.getSubstractionAccess().getRightLeftShiftParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftShift__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftShiftAccess().getRightRightShiftParserRuleCall_1_2_0()); }
		ruleRightShift
		{ after(grammarAccess.getLeftShiftAccess().getRightRightShiftParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RightShift__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRightShiftAccess().getRightAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getRightShiftAccess().getRightAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRightOrParserRuleCall_1_2_0()); }
		ruleOr
		{ after(grammarAccess.getAndAccess().getRightOrParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRightXorParserRuleCall_1_2_0()); }
		ruleXor
		{ after(grammarAccess.getOrAccess().getRightXorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xor__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getXorAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueDecimalValueParserRuleCall_0_0()); }
		ruleDecimalValue
		{ after(grammarAccess.getPrimaryAccess().getValueDecimalValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueHexaDecimalValueParserRuleCall_1_0()); }
		ruleHexaDecimalValue
		{ after(grammarAccess.getPrimaryAccess().getValueHexaDecimalValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueOctalValueParserRuleCall_2_0()); }
		ruleOctalValue
		{ after(grammarAccess.getPrimaryAccess().getValueOctalValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueBinaryValueParserRuleCall_3_0()); }
		ruleBinaryValue
		{ after(grammarAccess.getPrimaryAccess().getValueBinaryValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueCharacterValueParserRuleCall_4_0()); }
		ruleCharacterValue
		{ after(grammarAccess.getPrimaryAccess().getValueCharacterValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValueIdentifierValueParserRuleCall_5_0()); }
		ruleIdentifierValue
		{ after(grammarAccess.getPrimaryAccess().getValueIdentifierValueParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ValueAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getValuePrimaryParserRuleCall_6_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getValuePrimaryParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierValueAccess().getValueIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifierValueAccess().getValueIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__SignAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueAccess().getSignAlternatives_0_0()); }
		(rule__DecimalValue__SignAlternatives_0_0)
		{ after(grammarAccess.getDecimalValueAccess().getSignAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDecimalValueAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getDecimalValueAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HexaDecimalValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHexaDecimalValueAccess().getValueHEXATerminalRuleCall_0()); }
		RULE_HEXA
		{ after(grammarAccess.getHexaDecimalValueAccess().getValueHEXATerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OctalValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOctalValueAccess().getValueOCTALTerminalRuleCall_0()); }
		RULE_OCTAL
		{ after(grammarAccess.getOctalValueAccess().getValueOCTALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryValueAccess().getValueBINARYTerminalRuleCall_0()); }
		RULE_BINARY
		{ after(grammarAccess.getBinaryValueAccess().getValueBINARYTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharacterValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharacterValueAccess().getValueCHARACTERTerminalRuleCall_0()); }
		RULE_CHARACTER
		{ after(grammarAccess.getCharacterValueAccess().getValueCHARACTERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_HEXA : '$' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_OCTAL : '@' ('0'..'7')+;

RULE_BINARY : '0' 'b' ('0'..'1')+;

RULE_CHARACTER : '\'' ' '..'\u007F';

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ANY_EXCEPT_COMMENT_END_OF_LINE : ';' ~(('\n'|'\r'))*;

RULE_WS : (' '|'\t')+;

RULE_CR : '\r'? '\n';

RULE_END_OF_FILE : EOF;
