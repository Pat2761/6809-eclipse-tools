/**
 * generated by Xtext 2.28.0
 */
package org.bpy.electronics.mc6809.assembler.assembler.impl;

import org.bpy.electronics.mc6809.assembler.assembler.AssemblerPackage;
import org.bpy.electronics.mc6809.assembler.assembler.MacroDefinition;
import org.bpy.electronics.mc6809.assembler.assembler.SpecialFunctions;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Special Functions</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.bpy.electronics.mc6809.assembler.assembler.impl.SpecialFunctionsImpl#getSpecialFuntion <em>Special Funtion</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecialFunctionsImpl extends MinimalEObjectImpl.Container implements SpecialFunctions
{
  /**
   * The cached value of the '{@link #getSpecialFuntion() <em>Special Funtion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecialFuntion()
   * @generated
   * @ordered
   */
  protected MacroDefinition specialFuntion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecialFunctionsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AssemblerPackage.Literals.SPECIAL_FUNCTIONS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MacroDefinition getSpecialFuntion()
  {
    return specialFuntion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSpecialFuntion(MacroDefinition newSpecialFuntion, NotificationChain msgs)
  {
    MacroDefinition oldSpecialFuntion = specialFuntion;
    specialFuntion = newSpecialFuntion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION, oldSpecialFuntion, newSpecialFuntion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpecialFuntion(MacroDefinition newSpecialFuntion)
  {
    if (newSpecialFuntion != specialFuntion)
    {
      NotificationChain msgs = null;
      if (specialFuntion != null)
        msgs = ((InternalEObject)specialFuntion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION, null, msgs);
      if (newSpecialFuntion != null)
        msgs = ((InternalEObject)newSpecialFuntion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION, null, msgs);
      msgs = basicSetSpecialFuntion(newSpecialFuntion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION, newSpecialFuntion, newSpecialFuntion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION:
        return basicSetSpecialFuntion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION:
        return getSpecialFuntion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION:
        setSpecialFuntion((MacroDefinition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION:
        setSpecialFuntion((MacroDefinition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.SPECIAL_FUNCTIONS__SPECIAL_FUNTION:
        return specialFuntion != null;
    }
    return super.eIsSet(featureID);
  }

} //SpecialFunctionsImpl
