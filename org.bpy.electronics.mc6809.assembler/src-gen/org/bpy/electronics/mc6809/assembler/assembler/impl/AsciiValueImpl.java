/**
 * generated by Xtext 2.28.0
 */
package org.bpy.electronics.mc6809.assembler.assembler.impl;

import org.bpy.electronics.mc6809.assembler.assembler.AsciiValue;
import org.bpy.electronics.mc6809.assembler.assembler.AssemblerPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ascii Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.bpy.electronics.mc6809.assembler.assembler.impl.AsciiValueImpl#getAsciiValue <em>Ascii Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AsciiValueImpl extends MinimalEObjectImpl.Container implements AsciiValue
{
  /**
   * The default value of the '{@link #getAsciiValue() <em>Ascii Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsciiValue()
   * @generated
   * @ordered
   */
  protected static final String ASCII_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAsciiValue() <em>Ascii Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAsciiValue()
   * @generated
   * @ordered
   */
  protected String asciiValue = ASCII_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AsciiValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AssemblerPackage.Literals.ASCII_VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAsciiValue()
  {
    return asciiValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAsciiValue(String newAsciiValue)
  {
    String oldAsciiValue = asciiValue;
    asciiValue = newAsciiValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AssemblerPackage.ASCII_VALUE__ASCII_VALUE, oldAsciiValue, asciiValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AssemblerPackage.ASCII_VALUE__ASCII_VALUE:
        return getAsciiValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AssemblerPackage.ASCII_VALUE__ASCII_VALUE:
        setAsciiValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.ASCII_VALUE__ASCII_VALUE:
        setAsciiValue(ASCII_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.ASCII_VALUE__ASCII_VALUE:
        return ASCII_VALUE_EDEFAULT == null ? asciiValue != null : !ASCII_VALUE_EDEFAULT.equals(asciiValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (asciiValue: ");
    result.append(asciiValue);
    result.append(')');
    return result.toString();
  }

} //AsciiValueImpl
