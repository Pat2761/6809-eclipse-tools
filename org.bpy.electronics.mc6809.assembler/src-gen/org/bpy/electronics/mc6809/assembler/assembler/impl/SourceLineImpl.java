/**
 * generated by Xtext 2.28.0
 */
package org.bpy.electronics.mc6809.assembler.assembler.impl;

import org.bpy.electronics.mc6809.assembler.assembler.AssemblerPackage;
import org.bpy.electronics.mc6809.assembler.assembler.CommentLine;
import org.bpy.electronics.mc6809.assembler.assembler.SourceLine;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Source Line</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.bpy.electronics.mc6809.assembler.assembler.impl.SourceLineImpl#getEmptyLine <em>Empty Line</em>}</li>
 *   <li>{@link org.bpy.electronics.mc6809.assembler.assembler.impl.SourceLineImpl#getCommentLine <em>Comment Line</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SourceLineImpl extends MinimalEObjectImpl.Container implements SourceLine
{
  /**
   * The default value of the '{@link #getEmptyLine() <em>Empty Line</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmptyLine()
   * @generated
   * @ordered
   */
  protected static final String EMPTY_LINE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmptyLine() <em>Empty Line</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmptyLine()
   * @generated
   * @ordered
   */
  protected String emptyLine = EMPTY_LINE_EDEFAULT;

  /**
   * The cached value of the '{@link #getCommentLine() <em>Comment Line</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommentLine()
   * @generated
   * @ordered
   */
  protected CommentLine commentLine;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SourceLineImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AssemblerPackage.Literals.SOURCE_LINE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEmptyLine()
  {
    return emptyLine;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEmptyLine(String newEmptyLine)
  {
    String oldEmptyLine = emptyLine;
    emptyLine = newEmptyLine;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AssemblerPackage.SOURCE_LINE__EMPTY_LINE, oldEmptyLine, emptyLine));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CommentLine getCommentLine()
  {
    return commentLine;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCommentLine(CommentLine newCommentLine, NotificationChain msgs)
  {
    CommentLine oldCommentLine = commentLine;
    commentLine = newCommentLine;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AssemblerPackage.SOURCE_LINE__COMMENT_LINE, oldCommentLine, newCommentLine);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCommentLine(CommentLine newCommentLine)
  {
    if (newCommentLine != commentLine)
    {
      NotificationChain msgs = null;
      if (commentLine != null)
        msgs = ((InternalEObject)commentLine).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AssemblerPackage.SOURCE_LINE__COMMENT_LINE, null, msgs);
      if (newCommentLine != null)
        msgs = ((InternalEObject)newCommentLine).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AssemblerPackage.SOURCE_LINE__COMMENT_LINE, null, msgs);
      msgs = basicSetCommentLine(newCommentLine, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AssemblerPackage.SOURCE_LINE__COMMENT_LINE, newCommentLine, newCommentLine));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AssemblerPackage.SOURCE_LINE__COMMENT_LINE:
        return basicSetCommentLine(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AssemblerPackage.SOURCE_LINE__EMPTY_LINE:
        return getEmptyLine();
      case AssemblerPackage.SOURCE_LINE__COMMENT_LINE:
        return getCommentLine();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AssemblerPackage.SOURCE_LINE__EMPTY_LINE:
        setEmptyLine((String)newValue);
        return;
      case AssemblerPackage.SOURCE_LINE__COMMENT_LINE:
        setCommentLine((CommentLine)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.SOURCE_LINE__EMPTY_LINE:
        setEmptyLine(EMPTY_LINE_EDEFAULT);
        return;
      case AssemblerPackage.SOURCE_LINE__COMMENT_LINE:
        setCommentLine((CommentLine)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AssemblerPackage.SOURCE_LINE__EMPTY_LINE:
        return EMPTY_LINE_EDEFAULT == null ? emptyLine != null : !EMPTY_LINE_EDEFAULT.equals(emptyLine);
      case AssemblerPackage.SOURCE_LINE__COMMENT_LINE:
        return commentLine != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (emptyLine: ");
    result.append(emptyLine);
    result.append(')');
    return result.toString();
  }

} //SourceLineImpl
